#include<iostream>
#include<cstring>
#include<algorithm>
#include<queue>
using namespace std;
int n;
int arr[21][21];
int visit[21][21];
int sum[5];
int answer = 99999;

void solve(int x, int y, int d1, int d2) {
	for (int i = 0; i < 5; i++)sum[i] = 0;
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= n; j++)
		{
			visit[i][j] = 0;
		}
	}

	for (int j = y, i = x; i <= x+d1&&j >= y - d1; i++,j--) {
		if (visit[i][j] == 0) {
			sum[4] += arr[i][j];

			visit[i][j] = 5;
		}
	}
	
	for (int i = x, j = y; i <= x + d2&& j <= y + d2; i++,j++) {
		if (visit[i][j] == 0) {
			sum[4] += arr[i][j];
			visit[i][j] = 5;
		}
	}
	

	for (int i = x + d1, j = y - d1; i <= x + d1 + d2&& j <= y - d1 + d2;i++, j++) {
		if (visit[i][j] == 0) {
			sum[4] += arr[i][j];
		visit[i][j] = 5;
		}
	}
	

	for (int i = x + d2, j = y + d2; i <= x + d1 + d2&&j >= y - d1 + d2; i++,j--) {
		if (visit[i][j] == 0) {
			sum[4] += arr[i][j];
			visit[i][j] = 5;
		}
	}
	queue<int> q;
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= n; j++)
		{
			if (visit[i][j] == 5) {
				q.push(j);
			}
		}
		if (q.size() == 1)q.pop();
		else if (!q.empty()) {
			int it1 = q.front();
			q.pop();
			int it2 = q.front();
			q.pop();
			for (int j = it1 + 1; j < it2; j++) {
				if (visit[i][j] == 0) {
					sum[4] += arr[i][j];
					visit[i][j] = 5;
				}
			}
		}
	}

	for (int i = 1; i < x + d1; i++) {
		for (int j = 1; j <= y; j++) {
			if (visit[i][j] == 0) {
				sum[0] += arr[i][j];
				visit[i][j] = 1;
			}
		}
	}
	for (int i = 1; i <= x + d2; i++) {
		for (int j = y + 1; j <= n; j++) {
			if (visit[i][j] == 0) {
				sum[1] += arr[i][j];
				visit[i][j] = 2;
			}
		}
	}
	for (int i = x + d1; i <= n; i++) {
		for (int j = 1; j < y - d1 + d2; j++) {
			if (visit[i][j] == 0) {
				sum[2] += arr[i][j];
				visit[i][j] = 3;
			}
		}
	}
	for (int i = x + d2 + 1; i <= n; i++) {
		for (int j = y - d1 + d2; j <= n; j++) {
			if (visit[i][j] == 0) {
				sum[3] += arr[i][j];
				visit[i][j] = 4;
			}
		}
	}

	if (sum[4] == 0||sum[3] == 0|| sum[2] == 0|| sum[1] == 0|| sum[0] == 0)return;

	sort(sum, sum+5);
	
	answer = min(answer, sum[4] - sum[0]);
}
int main()
{
	cin >> n;
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= n; j++)
		{
			cin >> arr[i][j];
		} 
	}
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= n; j++)
		{
			for (int d1 = 1; d1 <= n; d1++) {
				for (int d2 = 1; d2 <= n; d2++) {
					if (i + d1 + d2 <= n && 1 <= j - d1 && j - d1 < j && j < j + d2 && j + d2 <= n) {
					
						solve(i, j, d1, d2);
					
					}
				}
			}
		
		}
	}
	cout << answer << endl;
	return 0;
}
