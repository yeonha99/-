#include<iostream>
#include<string>
#include<vector>
#include<algorithm>
using namespace std;
int n;
int arr[101];
int op[5];
vector<int> q;
vector<int> answer;
void DFS(int top) {
	if (top == n - 1) {
		int ans = arr[0];
		int index = 1;
		for (int i = 0; i < n - 1; i++) {
				if (q[i] == 2) {
					ans *= arr[index];
				}
				else if (q[i] ==1) {
					ans -= arr[index];
				}
				else if (q[i] ==0) {
					ans += arr[index];
				}
				else if (q[i] ==3) {
					ans /= arr[index];
				}
				index++;
		}
		answer.push_back(ans);
		return;
	}
	for (int i = 0; i < 4; i++) {
		if (op[i] > 0) {
			q.push_back(i);
			op[i]--;
			DFS(top + 1);
			q.erase(q.begin() + top);
			op[i]++;
		}
	}
}
int main()
{
	cin >> n;
	for (int i = 0; i < n; i++)cin >> arr[i];
	for (int i = 0; i < 4; i++)cin >> op[i];

	DFS(0);
	sort(answer.begin(), answer.end());
	cout << answer[answer.size()-1] << endl;
	cout << answer[0] << endl;

}
