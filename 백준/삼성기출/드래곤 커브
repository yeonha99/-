#include<iostream>
#include<cstring>
#include<vector>
using namespace std;
int n, x, y, d, g;
int arr[101][101] = {0,};
int answer = 0;
int dy[4] = { 0, -1, 0, 1 };
int dx[4] = { 1, 0, -1, 0 };
vector<int> dir_info;

void makeDragonCurve()
{
	int size = dir_info.size();
	for (int i = size - 1; i >= 0; i--)
	{
		int nd = (dir_info[i] + 1) % 4;
		y += dy[nd];
		x += dx[nd];
		arr[y][x] = 1;
		dir_info.push_back(nd);
	}
}

int main()
{
	cin >> n;
	while (n--) {
		cin >> x >> y >> d >> g;
		dir_info.clear();
		arr[y][x] = 1;
		y += dy[d];
		x += dx[d];
		arr[y][x] = 1;
		dir_info.push_back(d);
		
		while (g--)
		{
			makeDragonCurve();
		}
		
	}
	for (int i = 0; i < 101; i++) {
		for (int j = 0; j < 101; j++) {
			if (arr[i][j] == 1 && arr[i][j + 1] == 1 && arr[i + 1][j] == 1 && arr[i + 1][j + 1] == 1)
				answer++;
		}
		
	}
	cout << answer << endl;
	return 0;
}
