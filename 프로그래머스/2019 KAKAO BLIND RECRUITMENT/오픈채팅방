#include <string>
#include <vector>
#include <algorithm>
#include <unordered_map>
using namespace std;
struct sav{
    string id;
    int count;
};

vector<string> solution(vector<string> record) {
    vector<string> answer;
    unordered_map<string,string> m;
    vector<sav> ord;
    for(int i=0;i<record.size();i++){
        int now=0;
        string save[3];
        now=record[i].find(" ");
        int prev=0;
        int ind=0;
        while(now!=-1){
            string div=record[i].substr(prev,now-prev);
            save[ind]=div;
            ind++;
            prev=now+1;
            now=record[i].find(" ",prev);
        }
        save[ind]=record[i].substr(prev,now-prev);
       
        if(save[0]!="Leave"){
        m[save[1]]=save[2];
        }
        if(save[0]=="Leave"){
             ord.push_back({save[1],1});
        }
        else if(save[0]=="Enter"){
        ord.push_back({save[1],0});
        }
    }
    for(int i=0;i<ord.size();i++){

        if(ord[i].count==0){
            answer.push_back(m[ord[i].id]+"님이 들어왔습니다.");
        }else answer.push_back(m[ord[i].id]+"님이 나갔습니다.");
    }

    return answer;
}
