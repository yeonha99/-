#include <string>
#include <vector>
#include <iostream>
using namespace std;

int solution(int m, int n, vector<string> board) {
char map[31][31]={' ',};
int move_i[3]={0,-1,-1};
int move_j[3]={1,0,1};
int visit[31][31]={0,};
       int answer = 0;
    for(int i=0;i<m;i++){
        for(int j=0;j<n;j++){
            map[m-i-1][j]=board[i][j];
        }
    }

    bool roop=1;
    while(roop==1){
       roop=0;
    for(int i=m-1;i>0;i--){
        for(int j=0;j<n-1;j++){
            bool go=0;
              if(map[i][j]==' ')continue;
            char same=map[i][j];
    for(int k=0;k<3;k++){
        if(map[i+move_i[k]][j+move_j[k]]!=same) break;
        if(k==2) {go=1;
                  roop=1;
                 }
    }
    if(go==1){
        visit[i][j]=1;
          for(int k=0;k<3;k++){
             visit[i+move_i[k]][j+move_j[k]]=1;

          }
    }
    }
      }
      for(int i=0;i<m;i++){
        for(int j=0;j<n;j++){
        if(visit[i][j]==1&&map[i][j]!=' '){
            answer++;
            visit[i][j]=0;
            map[i][j]=' ';
 
        }
        }
       }
    
    for(int j=0;j<n;j++){
            for(int i=0;i<m-1;i++){
        if(map[i][j]==' '){
            for(int k=i+1;k<m;k++){
            if(map[k][j]!=' '){
            for(int z=k;z<m;z++){
                 map[i+z-k][j]=map[z][j];
                map[z][j]=' ';
            }
                break;
            }
                }
        }
        }
    }

    }

    return answer;
}
