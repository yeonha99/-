#include <string>
#include <vector>
#include <cmath> 
#include <algorithm> 
#include <unordered_set> 
using namespace std; 
bool check(int n) { 
    int end = sqrt(n); 
    for (int i = 2; i <= end; i++) { 
        if (n % i == 0) return false; } 
    return true; } 
int solution(string numbers) {  
    vector<int> num;
    unordered_set<int> all_num; 
    int len = numbers.size(); 
    for (int i = 0; i < len; i++) {
        num.push_back(numbers[i] - '0');
        all_num.insert(numbers[i] - '0');
    } 
    sort(num.begin(), num.end()); 
    do { for (int i = 2; i <= len; i++) {
        string a = "";
        for (int j = 0; j < i; j++) { a += num[j] + '0'; } 
        all_num.insert(stoi(a));
    } } while (next_permutation(num.begin(), num.end())); 
    int answer = 0; 
    for (int n : all_num) { 
        if (n < 2) continue; 
        if (check(n)) answer++; } 
    return answer;
}
