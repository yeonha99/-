#include <vector>
#include <queue>
#include <algorithm>
#include <iostream>
using namespace std;
struct save{
    int v;
    int cnt;
};
int solution(int n, vector<vector<int>> edge) {
    int answer = 0;
    queue<save> q;
    int visit[20001]={0,};
    q.push({1,0});
    int m=0;
    while(!q.empty()){
        auto it=q.front();
        q.pop();
        for(int i=0;i<edge.size();i++){
            if(edge[i][0]==it.v&&visit[edge[i][1]]==0){
                visit[edge[i][1]]=it.cnt+1;
                q.push({edge[i][1],it.cnt+1});
                m=max(m,it.cnt+1);
            }else if(edge[i][1]==it.v&&visit[edge[i][0]]==0){
                visit[edge[i][0]]=it.cnt+1;
                q.push({edge[i][0],it.cnt+1});
                m=max(m,it.cnt+1);
            }
        }
    }
    for(int i=2;i<=n;i++){
        if(visit[i]==m)answer++;
    }
    return answer;
}
